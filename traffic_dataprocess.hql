create database traffic_analysis;
use traffic_analysis;
create  table traffic_data(GSID string,CAEPLATE string,PLATECOORD string,PASSTIME string,CARBRAND string,CARCOLOR string,PLATECOLOR string ,SPEED int,DRIVEDIR int,CARSTATE string,IMGID1 string,null1 string , null2 string ,DRIVEWAY int ,LOCATTIONID string,CAPTUREDIR int) ROW FORMAT DELIMITED FIELDS TERMINATED BY ',';
load data  inpath '/traffic_analysis/1349020800000.txt' into table traffic_data;
set hive.exec.dynamic.partition.mode=nonstrict;
set hive.exec.dynamic.partition = true;
create  table traffic_data_partition(GSID string,CAEPLATE string,PLATECOORD string,passdate string,time string,CARBRAND string,CARCOLOR string,PLATECOLOR string ,SPEED int,DRIVEDIR int,CARSTATE string,IMGID1 string,DRIVEWAY int ,LOCATTIONID string,CAPTUREDIR int) PARTITIONED BY (datetime string) ROW FORMAT DELIMITED FIELDS TERMINATED BY '\001';
insert overwrite table traffic_data_partition partition(datetime)  select GSID ,CAEPLATE ,PLATECOORD ,split(PASSTIME ,' ')[0] as passdate,split(PASSTIME ,' ')[1] as time,CARBRAND ,CARCOLOR ,PLATECOLOR  ,SPEED ,DRIVEDIR ,CARSTATE ,IMGID1   ,DRIVEWAY  ,LOCATTIONID ,CAPTUREDIR ,split(PASSTIME ,' ')[0] from traffic_data;
create table  traffic_count as SELECT COUNT(*) as daycount, COUNT(DISTINCT gsid) as kadian , COUNT(DISTINCT CAEPLATE) as daycar ,sum(CASE WHEN substr(DISTINCT CAEPLATE, 1,1)!='鲁' THEN 1 else 0 END) as waibu, sum(case when  split(time,':')[0]>=8 and split(time,':')[0]<9 then 1 else 0 end) as 8To9_car, passdate FROM traffic_data_partition  GROUP BY passdate;
create table traffic_belongplace_middle as select  caeplate ,(case when substr(caeplate,1,1)='鲁' then substr(caeplate,2,1) when substr(caeplate,1,1)='济' then '济南军区' when substr(caeplate,1,1)='海' then '济南军区' when substr(caeplate,1,2)='无牌' then '无牌' else '外地' end ) as belong_place ,passdate ,time  ,PLATECOORD,PLATECOLOR ,LOCATTIONID  from traffic_data_partition ;
create table traffic_belongplace_province as select passdate, count(caeplate) as count,  sum(case when belong_place !='A' and  belong_place !='W' and belong_place !='外地' then 1  else 0  end ) as waishi ,sum(case when belong_place ='A' then 1 when  belong_place ='W' then 1 else 0 end ) as jinan ,sum(case when belong_place ='B' then 1 when  belong_place ='U' then 1 else 0 end ) as qingdao,sum(case when belong_place ='K' then 1 when  belong_place ='V' then 1 else 0 end ) as weihai,sum(case when belong_place ='F' then 1 when  belong_place ='Y' then 1 else 0 end ) as yantai,sum(case when belong_place ='C'  then 1 else 0 end ) as zibo,sum(case when belong_place ='D'  then 1 else 0 end ) as zhaozhuang,sum(case when belong_place ='E'  then 1 else 0 end ) as dongying,sum(case when belong_place ='G'  then 1 else 0 end ) as weifang,sum(case when belong_place ='H'  then 1 else 0 end ) as jining,sum(case when belong_place ='J'  then 1 else 0 end ) as taian,sum(case when belong_place ='L'  then 1 else 0 end ) as rizhao,sum(case when belong_place ='M'  then 1 else 0 end ) as laiwu,sum(case when belong_place ='N'  then 1 else 0 end ) as dezhou,sum(case when belong_place ='P'  then 1 else 0 end ) as liaocheng,sum(case when belong_place ='Q'  then 1 else 0 end ) as linyi,sum(case when belong_place ='R'  then 1 else 0 end ) as heze ,sum(case when belong_place ='无牌'  then 1 else 0 end ) as wupai ,sum(case when belong_place ='济南军区'  then 1 else 0 end ) as junqv  from (select passdate ,caeplate ,belong_place  from traffic_belongplace_middle group by passdate ,caeplate ,belong_place ) a  group by passdate;
create table traffic_belongplace_other_province as  select passdate, sum( case when substr(CAEPLATE,1,1)='鲁' then 0 when substr(CAEPLATE,1,1)='无'  then 0 when substr(CAEPLATE,1,1)='济'  then 0 when substr(CAEPLATE,1,1)='青'  then 0 else 1   end) as other_province_count  ,sum(case when substr(CAEPLATE,1,1)='浙' then 1 else 0 end  ) as zhejiang,sum(case when substr(CAEPLATE,1,1)='闽' then 1 else 0 end  ) as fujian,sum(case when substr(CAEPLATE,1,1)='粤' then 1 else 0 end  ) as guangdong,sum(case when substr(CAEPLATE,1,1)='津' then 1 else 0 end  ) as tianjin,sum(case when substr(CAEPLATE,1,1)='冀' then 1 else 0 end  ) as hebei,sum(case when substr(CAEPLATE,1,1)='晋' then 1 else 0 end  ) as shanxi,sum(case when substr(CAEPLATE,1,1)='蒙' then 1 else 0 end  ) as neimenggu,sum(case when substr(CAEPLATE,1,1)='辽' then 1 else 0 end  ) as liaoning,sum(case when substr(CAEPLATE,1,1)='吉' then 1 else 0 end  ) as jilin,sum(case when substr(CAEPLATE,1,1)='黑' then 1 else 0 end  ) as heilongjiang,sum(case when substr(CAEPLATE,1,1)='沪' then 1 else 0 end  ) as shanghai,sum(case when substr(CAEPLATE,1,1)='苏' then 1 else 0 end  ) as jiangsu,sum(case when substr(CAEPLATE,1,1)='皖' then 1 else 0 end  ) as anhui,sum(case when substr(CAEPLATE,1,1)='赣' then 1 else 0 end  ) as jiangxi,sum(case when substr(CAEPLATE,1,1)='豫' then 1 else 0 end  ) as henan,sum(case when substr(CAEPLATE,1,1)='鄂' then 1 else 0 end  ) as hubei,sum(case when substr(CAEPLATE,1,1)='湘' then 1 else 0 end  ) as hunan,sum(case when substr(CAEPLATE,1,1)='桂' then 1 else 0 end  ) as guangxizhuangzu,sum(case when substr(CAEPLATE,1,1)='琼' then 1 else 0 end  ) as hainan,sum(case when substr(CAEPLATE,1,1)='渝' then 1 else 0 end  ) as chongqing,sum(case when substr(CAEPLATE,1,1)='川' then 1 else 0 end  ) as sichuan,sum(case when substr(CAEPLATE,1,1)='贵' then 1 else 0 end  ) as guizhou,sum(case when substr(CAEPLATE,1,1)='云' then 1 else 0 end  ) as yunnan,sum(case when substr(CAEPLATE,1,1)='藏' then 1 else 0 end  ) as xizang,sum(case when substr(CAEPLATE,1,1)='陕' then 1 else 0 end  ) as shan_xi,sum(case when substr(CAEPLATE,1,1)='甘' then 1 else 0 end  ) as gansu,sum(case when substr(CAEPLATE,1,1)='青' then 1 else 0 end  ) as qinghai,sum(case when substr(CAEPLATE,1,1)='宁' then 1 else 0 end  ) as ningxia,sum(case when substr(CAEPLATE,1,1)='新' then 1 else 0 end  ) as xinjiang  from  traffic_data_partition  group by passdate;
create table traffic_time_hours as  select passdate , sum(case when  split(time,':')[0]>=0 and split(time,':')[0]<1 then 1 else 0 end) as 0To1_car, sum(case when  split(time,':')[0]>=1 and split(time,':')[0]<2 then 1 else 0 end) as 1To2_car, sum(case when  split(time,':')[0]>=2 and split(time,':')[0]<3 then 1 else 0 end) as 2To3_car, sum(case when  split(time,':')[0]>=3 and split(time,':')[0]<4 then 1 else 0 end) as 3To4_car, sum(case when  split(time,':')[0]>=4 and split(time,':')[0]<5 then 1 else 0 end) as 4To5_car, sum(case when  split(time,':')[0]>=5 and split(time,':')[0]<6 then 1 else 0 end) as 5To6_car, sum(case when  split(time,':')[0]>=6 and split(time,':')[0]<7 then 1 else 0 end) as 6To7_car, sum(case when  split(time,':')[0]>=7 and split(time,':')[0]<8 then 1 else 0 end) as 7To8_car, sum(case when  split(time,':')[0]>=8 and split(time,':')[0]<9 then 1 else 0 end) as 8To9_car, sum(case when  split(time,':')[0]>=9 and split(time,':')[0]<10 then 1 else 0 end) as 9To10_car, sum(case when  split(time,':')[0]>=10 and split(time,':')[0]<11 then 1 else 0 end) as 10To11_car, sum(case when  split(time,':')[0]>=11 and split(time,':')[0]<12 then 1 else 0 end) as 11To12_car, sum(case when  split(time,':')[0]>=12 and split(time,':')[0]<13 then 1 else 0 end) as 12To13_car, sum(case when  split(time,':')[0]>=13 and split(time,':')[0]<14 then 1 else 0 end) as 13To14_car, sum(case when  split(time,':')[0]>=14 and split(time,':')[0]<15 then 1 else 0 end) as 14To15_car, sum(case when  split(time,':')[0]>=15 and split(time,':')[0]<16 then 1 else 0 end) as 15To16_car, sum(case when  split(time,':')[0]>=16 and split(time,':')[0]<17 then 1 else 0 end) as 16To17_car, sum(case when  split(time,':')[0]>=17 and split(time,':')[0]<18 then 1 else 0 end) as 17To18_car, sum(case when  split(time,':')[0]>=18 and split(time,':')[0]<19 then 1 else 0 end) as 18To19_car, sum(case when  split(time,':')[0]>=19 and split(time,':')[0]<20 then 1 else 0 end) as 19To20_car, sum(case when  split(time,':')[0]>=20 and split(time,':')[0]<21 then 1 else 0 end) as 20To21_car, sum(case when  split(time,':')[0]>=21 and split(time,':')[0]<22 then 1 else 0 end) as 21To22_car, sum(case when  split(time,':')[0]>=22 and split(time,':')[0]<23 then 1 else 0 end) as 22To23_car, sum(case when  split(time,':')[0]>=23  then 1 else 0 end) as 23To24_car    from traffic_data_partition  group by passdate;
create table Vehicle_type_count as select passdate, count( caeplate) , sum(case when platecoord =01 then 1 else 0 end) as daxing , sum(case when platecoord =02 then 1 else 0 end) as xiaoxing , sum(case when platecoord =03 then 1 else 0 end) as shiguan , sum(case when platecoord =04 then 1 else 0 end) as lingguan , sum(case when platecoord =05 then 1 else 0 end) as jingwai , sum(case when platecoord =06 then 1 else 0 end) as waiji , sum(case when platecoord =07 then 1 else 0 end) as sanlunmotuo , sum(case when platecoord =08 then 1 else 0 end) as qingbianmotuo , sum(case when platecoord =09 then 1 else 0 end) as shituanmotuo , sum(case when platecoord =10 then 1 else 0 end) as lingguanmotuo , sum(case when platecoord =11 then 1 else 0 end) as jingwaimotuo , sum(case when platecoord =12 then 1 else 0 end) as waijimotuo ,sum(case when platecoord =13 then 1 else 0 end) as nongyongyunshu , sum(case when platecoord =14 then 1 else 0 end) as tuolaji , sum(case when platecoord =15 then 1 else 0 end) as guache  , sum(case when platecoord =16 then 1 else 0 end) as jiaoliaoqiche  , sum(case when platecoord =17 then 1 else 0 end) as jiaolianmotuo  , sum(case when platecoord =18 then 1 else 0 end) as shiyanqiche  , sum(case when platecoord =19 then 1 else 0 end) as shiyanmotuo   , sum(case when platecoord =20 then 1 else 0 end) as linshirujingqiche   , sum(case when platecoord =21 then 1 else 0 end) as linShiRuJingMoTuo  , sum(case when platecoord =22 then 1 else 0 end) as linshixingshiche  , sum(case when platecoord =23 then 1 else 0 end) as jingyongqiche    , sum(case when platecoord =24 then 1 else 0 end) as jingyongmotuo  , sum(case when platecoord =99 then 1 else 0 end) as qita  , sum(case when platecoord ='CPT_NULL' then 1 else 0 end) as wuleixing from  (select passdate , caeplate ,PLATECOORD  from traffic_data_partition  group by passdate ,caeplate ,PLATECOORD) a group by passdate ;
create table Vehicle_other_city_Month as select passdate, sum(qingdao) as qingdao ,sum(weihai) as weihai,sum(yantai) as yantai ,sum(zibo) as zibo,sum(zhaozhuang) as zhaozhuang,sum(dongying) as dongying ,sum(weifang) as weifang,sum(jining) as jining,sum(taian) as taian,sum(rizhao) as rizhao,sum(laiwu) as laiwu,sum(dezhou) as dezhou,sum(liaocheng) as liaocheng,sum(linyi) as linyi,sum(heze) as heze ,sum(wupai) as wupai,sum(junqv) as junqv  from traffic_belongplace_province where  passdate between date_sub(passdate,30) and passdate group by passdate ;
